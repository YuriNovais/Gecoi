@model Protocolo.Models.Pessoa

@{
    ViewBag.Title = "Cadastrar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <ol class="breadcrumb" style="margin-left: -30px; margin-right: -30px;">
            <li>
                <a href="@Url.Action("Home", "Protocolo")">
                    <i class="fa fa-home fa-fw"></i> Home
                </a>
            </li>
            <li>
                <a href="@Url.Action("Index", "Pessoa")">
                    Pessoas
                </a>
            </li>
            <li class="active">
                @ViewBag.Title
            </li>
        </ol>
        <h1 class="page-header">@ViewBag.Title</h1>
    </div>
</div>

<div class="row">
    <div class="row">
        @using (Html.BeginForm("Cadastrar", "Pessoa", FormMethod.Post, new { id = "pessoaForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="col-lg-12">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group required">
                                @Html.LabelFor(model => model.NomeRazao, new { @class = "control-label" })
                                @Html.EditorFor(model => model.NomeRazao, new { htmlAttributes = new { @class = "form-control", @tabindex = 1 } })
                                @Html.ValidationMessageFor(model => model.NomeRazao, string.Empty, new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <div class="form-group required">
                                <div>
                                    @Html.LabelFor(model => model.TipoPessoa, new { @class = "control-label" })
                                </div>
                                <div class="radio-inline">
                                    <label style="font-weight: normal;">
                                        @Html.RadioButtonFor(model => model.TipoPessoa, "F", new { @tabindex = 2 }) Física
                                    </label>
                                </div>
                                <div class="radio-inline">
                                    <label style="font-weight: normal;">
                                        @Html.RadioButtonFor(model => model.TipoPessoa, "J", new { @tabindex = 2 }) Jurídica
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.TipoPessoa, string.Empty, new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="tipo-pessoa-container"></div>

                        <div class="col-lg-6">
                            <div class="form-group required">
                                @Html.LabelFor(model => model.Endereco, new { @class = "control-label" })
                                @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control", @tabindex = 13 } })
                                @Html.ValidationMessageFor(model => model.Endereco, string.Empty, new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Bairro)
                                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control", @tabindex = 15 } })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UFId)
                                @Html.DropDownListFor(model => model.UFId, null, "-- Selecione--", htmlAttributes: new { @class = "form-control", @tabindex = 17 })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Telefone)
                                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control", @tabindex = 19, @mask = "(99)9999-9999?9" } })
                                @Html.ValidationMessageFor(model => model.Telefone, string.Empty, new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Complemento)
                                @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control", @tabindex = 14 } })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Cep)
                                @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control", @tabindex = 16, @mask = "99999-999" } })
                                @Html.ValidationMessageFor(model => model.Cep, string.Empty, new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MunicipioId)
                                @Html.DropDownListFor(model => model.MunicipioId, null, "-- Selecione--", htmlAttributes: new { @class = "form-control", @tabindex = 18 })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Fax)
                                @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control", @tabindex = 21, @mask = "(99)9999-9999?9" } })
                                @Html.ValidationMessageFor(model => model.Fax, string.Empty, new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email)
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @tabindex = 22 } })
                                @Html.ValidationMessageFor(model => model.Email, string.Empty, new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BancoId)
                                @Html.DropDownListFor(model => model.BancoId, null, "-- Selecione--", htmlAttributes: new { @class = "form-control", @tabindex = 23 })
                            </div>
                        </div>

                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.AgenciaBancaria)
                                @Html.EditorFor(model => model.AgenciaBancaria, new { htmlAttributes = new { @class = "form-control", @tabindex = 24 } })
                            </div>
                        </div>

                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ContaBancaria)
                                @Html.EditorFor(model => model.ContaBancaria, new { htmlAttributes = new { @class = "form-control", @tabindex = 25 } })
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.HomePage)
                                @Html.EditorFor(model => model.HomePage, new { htmlAttributes = new { @class = "form-control", @tabindex = 26 } })
                                @Html.ValidationMessageFor(model => model.HomePage, string.Empty, new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Observacao)
                                @Html.TextAreaFor(model => model.Observacao, new { rows = "5", cols = "40", @class = "form-control", @tabindex = 27 })
                                @Html.ValidationMessageFor(model => model.Observacao, string.Empty, new { @class = "text-danger" })
                            </div>

                            <div class="form-group required">
                                <div>
                                    @Html.LabelFor(model => model.Ativo, new { @class = "control-label" })
                                </div>
                                <div class="radio-inline">
                                    <label style="font-weight: normal;">
                                        @Html.RadioButtonFor(model => model.Ativo, true, new { @tabindex = 28 }) Sim
                                    </label>
                                </div>
                                <div class="radio-inline">
                                    <label style="font-weight: normal;">
                                        @Html.RadioButtonFor(model => model.Ativo, false, new { @tabindex = 28 }) Não
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.Ativo, string.Empty, new { @class = "text-danger" })
                            </div>
                        </div>

                        @{ Html.RenderPartial("_ClassificacoesView", Model); }

                        <div class="col-lg-12">
                            <div class="form-group text-center">
                                <input type="submit" value="Salvar" class="btn btn-outline btn-primary" id="salvar" tabindex="31" />
                                <input type="button" value="Cancelar" class="btn btn-outline btn-primary" tabindex="32" onclick="location.href='@Url.Action("Index", "Pessoa")'" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            clearSelection('#Selectables');
            clearSelection('#Classificacoes');

            $('#UFId').cascade({
                url: '@Url.Action("GetMunicipios")',
                paramName: 'UFId',
                childSelect: $('#MunicipioId')
            });

            $('#dataTables-classificacao').dataTable({
                'language': {
                    'url': '@Url.Content("~/Content/JSON/datatables-portugues.json")'
                },
                'lengthMenu': [[5, 10], [5, 10]],
                'info': false,
                'filter': false,
                'sort': false
            });

            var model = @Html.Raw(Json.Encode(Model));

            if (model.CPF !== null) {
                renderTipoPessoa('@Url.Action("PessoaFisicaView", "Pessoa")');

                setTimeout(function () {
                    populatePessoaFisica(model);
                    applyMask();
                    applyMaxLength();
                    initDatepicker();
                    addCPFRules();
                }, 500);
            } else if (model.CNPJ !== null) {
                renderTipoPessoa('@Url.Action("PessoaJuridicaView", "Pessoa")');

                setTimeout(function () {
                    populatePessoaJuridica(model);
                    applyMask();
                    applyMaxLength();
                    addPJValidationRules();
                }, 500);
            }

            $(':radio[name=TipoPessoa]').on('change', function () {
                clearFormElements('tipo-pessoa-container');

                $('.tipo-pessoa-container').empty();

                var value = $(this).val();
                var url = value === 'F' ? '@Url.Action("PessoaFisicaView", "Pessoa")' : '@Url.Action("PessoaJuridicaView", "Pessoa")';

                renderTipoPessoa(url);

                setTimeout(function () {
                    applyMask();
                    applyMaxLength();
                    initDatepicker();

                    if (value === 'F') {
                        addCPFRules();
                    } else {
                        addPJValidationRules();
                    }
                }, 500);
            });

            $('#salvar').on('click', function (e) {
                e.preventDefault();

                $('#Classificacoes option').attr('selected', 'selected')

                confirmAction($(this));
            });

            function renderTipoPessoa(url) {
                $.get(url, function (data) {
                    $('.tipo-pessoa-container').html(data);
                });
            }

            function populatePessoaFisica(model) {
                $('#CPF').val(model.CPF);
                $('#PessoaFisica_RG').val(model.PessoaFisica.RG);
                $('#PessoaFisica_OrgaoExpedicaoRG').val(model.PessoaFisica.OrgaoExpedicaoRG);
                $('#PessoaFisica_DataExpedicaoRG').val(model.PessoaFisica.DataExpedicaoRG);
                $('#PessoaFisica_RegistroMedico').val(model.PessoaFisica.RegistroMedico);
                $('#PessoaFisica_PisPasep').val(model.PessoaFisica.PisPasep);
                $('#PessoaFisica_CNH').val(model.PessoaFisica.CNH);
                $('#PessoaFisica_CategoriaCNH').val(model.PessoaFisica.CategoriaCNH);
                $('#PessoaFisica_Sexo').val(model.PessoaFisica.Sexo);
                $('#PessoaFisica_DataNascimento').val(model.PessoaFisica.DataNascimento);
            }

            function populatePessoaJuridica(model) {
                $('#CNPJ').val(model.CNPJ);
                $('#PessoaJuridica_Fantasia').val(model.PessoaJuridica.Fantasia);
                $('#PessoaJuridica_InscricaoEstadual').val(model.PessoaJuridica.InscricaoEstadual);
                $('#PessoaJuridica_InscricaoMunicipal').val(model.PessoaJuridica.InscricaoMunicipal);
                $('#PessoaJuridica_NomeResponsavel').val(model.PessoaJuridica.NomeResponsavel);
                $('#PessoaJuridica_CPFResponsavel').val(model.PessoaJuridica.CPFResponsavel);
            }

            function addCPFRules() {
                $('#CPF').rules('add', {
                    cpf: true,
                    messages: {
                        cpf: 'O valor do CPF é inválido.'
                    }
                });
                $('#CPF').rules('add', {
                    required: true,
                    messages: {
                        required: 'O campo CPF é obrigatório.'
                    }
                });
            }

            function addPJValidationRules() {
                $('#CNPJ').rules('add', {
                    cnpj: true,
                    messages: {
                        cnpj: 'O valor do CNPJ é inválido.'
                    }
                });
                $('#CNPJ').rules('add', {
                    required: true,
                    messages: {
                        required: 'O campo CNPJ é obrigatório.'
                    }
                });
                $('#PessoaJuridica_CPFResponsavel').rules('add', {
                    cpf: true,
                    messages: {
                        cpf: 'O valor do CPF é inválido.'
                    }
                });

                $('#PessoaJuridica_Fantasia').rules('add', {
                    required: true,
                    messages: {
                        required: 'O campo Nome Fantasia é obrigatório.'
                    }
                });
            }

        });
    </script>
}
