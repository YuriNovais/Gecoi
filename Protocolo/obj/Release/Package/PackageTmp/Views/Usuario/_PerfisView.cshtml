@model Protocolo.Models.UsuarioModel

<div class="col-lg-12">
    <div class="form-group required">
        @Html.LabelFor(model => model.PerfisList, new { @class = "control-label" })
    </div>
</div>

<div class="col-lg-5">
    <div class="form-group">
        @Html.ListBox("Selectables",
            Model.Perfis.Where(p => !Model.PerfisList.Contains(p.Value)).OrderBy(p => p.Value),
            new { @class = "form-control", @tabindex = 8 , @style = "min-height: 135px;" }
        )
    </div>
</div>

<div class="col-lg-2">
    <div class="form-group text-center">
        <input type="button" value=">"  class="btn btn-sm btn-default" onclick="append('#Selectables', '#PerfisList');"    title="Adicionar" style="min-width: 36px;" /><br />
        <input type="button" value=">>" class="btn btn-sm btn-default" onclick="appendAll('#Selectables', '#PerfisList');" title="Adicionar todos" /><br />
        <input type="button" value="<"  class="btn btn-sm btn-default" onclick="remover('#Selectables', '#PerfisList');"   title="Remover" style="min-width: 36px;" /><br />
        <input type="button" value="<<" class="btn btn-sm btn-default" onclick="removeAll('#Selectables', '#PerfisList');" title="Remover todos" />
    </div>
</div>

<div class="col-lg-5">
    <div class="form-group">
        @Html.ListBoxFor(model => model.PerfisList,
            Model.Perfis.Where(p => Model.PerfisList.Contains(p.Value)).OrderBy(p => p.Value),
            new { @class = "form-control", @tabindex = 9, @style = "min-height: 135px;" }
        )
    </div>
</div>

<div class="col-lg-12">
    <div class="form-group">
        @Html.ValidationMessageFor(model => model.PerfisList, "", new { @class = "text-danger" })
    </div>
</div>