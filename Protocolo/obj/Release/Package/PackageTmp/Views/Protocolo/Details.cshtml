@model Protocolo.Models.Protocolo

@{
    ViewBag.Title = "Visualizar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <style type="text/css">
        label {
            font-size: 20px;
        }
    </style>
}

<div class="row">
    <div class="col-lg-12">
        <ol class="breadcrumb" style="margin-left: -30px; margin-right: -30px;">
            <li>
                <a href="@Url.Action("Home", "Protocolo")">
                    <i class="fa fa-home fa-fw"></i> Home
                </a>
            </li>
            <li>
                <a href="@Url.Action("Index", "Protocolo")">
                    Protocolos
                </a>
            </li>
            <li class="active">
                @ViewBag.Title
            </li>
        </ol>
        <h1 class="page-header">@ViewBag.Title</h1>
    </div>
</div>

<div class="row">
    <div class="row">
        @using (Html.BeginForm("AdicionarAnexo", "Protocolo", new { returnUrl = ViewBag.returnUrl }, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="col-lg-12">
                <div class="panel-body">
                    <div class="row">
                        @Html.HiddenFor(model => model.Id, new { id = "ProtocoloId" })

                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.NumeroAno)
                                @Html.EditorFor(model => model.NumeroAno, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TipoDocumentoId)
                                @Html.DropDownListFor(model => model.TipoDocumentoId, null, "--Selecione--", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PessoaId)
                                @Html.EditorFor(model => model.Pessoa.NomeRazao, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Status)
                                @Html.EditorFor(model => model.DescricaoStatus, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DataAbertura)
                                @Html.EditorFor(model => model.DataAbertura, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AssuntoId)
                                @Html.DropDownListFor(model => model.AssuntoId, null, "--Selecione--", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FornecedorId)
                                @Html.EditorFor(model => model.Fornecedor.NomeRazao, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.Label("Localidade", new { @class = "control-label" })
                                @Html.EditorFor(model => model.Povoado.Descricao, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            </div>
                            
                        </div>


                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Descricao)
                                @Html.TextAreaFor(model => model.Descricao, new { rows = "5", cols = "40", @class = "form-control", @disabled = "disabled" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.HistoricoObservacao)
                                @Html.EditorFor(model => model.HistoricoObservacao, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            </div>

                            <div class="form-group">
                                @Html.Label("Dados do Requerente", new { @style = "vertical-align: bottom;" })

                                <a class="collapsable" data-toggle="collapse" href="#collapseRequerente">
                                    <i class="fa fa-plus-circle fa-2x"></i>
                                </a>

                                <div id="collapseRequerente" class="panel panel-default panel-collapse collapse">
                                    <div class="panel-body">

                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                @Html.Label(Model.Pessoa.TipoPessoa == "F" ? "Nome" : "Razão Social")
                                                @Html.EditorFor(model => model.Pessoa.NomeRazao, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>

                                            <div class="form-group">
                                                @Html.Label("Endereço")
                                                @Html.EditorFor(model => model.Pessoa.Endereco, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Pessoa.Bairro)
                                                @Html.EditorFor(model => model.Pessoa.Bairro, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>

                                            <div class="form-group">
                                                @Html.Label("UF")
                                                @Html.EditorFor(model => model.Pessoa.UFId, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Pessoa.Telefone)
                                                @Html.EditorFor(model => model.Pessoa.Telefone, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>
                                        </div>

                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                @if (Model.Pessoa.TipoPessoa == "F")
                                                {
                                                    @Html.LabelFor(model => model.Pessoa.CPF)
                                                    @Html.EditorFor(model => model.Pessoa.CPF, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                                }
                                                else
                                                {
                                                    @Html.LabelFor(model => model.Pessoa.CNPJ)
                                                    @Html.EditorFor(model => model.Pessoa.CNPJ, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                                }
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Pessoa.Complemento)
                                                @Html.EditorFor(model => model.Pessoa.Complemento, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Pessoa.Cep)
                                                @Html.EditorFor(model => model.Pessoa.Cep, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Pessoa.Municipio)
                                                @Html.EditorFor(model => model.Pessoa.Municipio.Nome, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Pessoa.Email)
                                                @Html.EditorFor(model => model.Pessoa.Email, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @if (Model.DocumentosProtocolo.Any())
                            {
                                <div class="form-group">
                                    @Html.Label("Documentos", new { @style = "vertical-align: bottom;" })

                                    <a class="collapsable" data-toggle="collapse" href="#collapseDocumento">
                                        <i class="fa fa-plus-circle fa-2x"></i>
                                    </a>

                                    <div id="collapseDocumento" class="panel-collapse collapse">
                                        <table class="table table-striped table-bordered table-hover" style="width: auto !important">
                                            <tr>
                                                <th>
                                                    @Html.Raw("Documento")
                                                </th>
                                                <th class="col-md-1 text-center">
                                                    @Html.Raw("Entregue?")
                                                </th>
                                            </tr>
                                            @foreach (var documento in Model.DocumentosProtocolo)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.DisplayFor(doc => documento.Documento.Descricao)
                                                    </td>
                                                    <td class="text-center">
                                                        @Html.DisplayFor(doc => documento.Entregue)
                                                    </td>
                                                </tr>
                                            }
                                        </table>
                                    </div>
                                </div>
                            }

                            <div class="form-group">
                                @Html.Label("Histórico", new { @style = "vertical-align: bottom;" })

                                <a class="collapsable" data-toggle="collapse" href="#collapseHistorico">
                                    <i class="fa fa-plus-circle fa-2x"></i>
                                </a>

                                <div id="collapseHistorico" class="panel-collapse collapse">
                                    <table class="table table-striped table-bordered table-hover" style="width: auto !important">
                                        <tr>
                                            <th class="col-md-2 text-center">
                                                @Html.Raw("Data/Hora")
                                            </th>
                                            <th class="col-md-3">
                                                @Html.Raw("Descrição")
                                            </th>
                                            <th class="col-md-1 text-center">
                                                @Html.Raw("Nº Lote")
                                            </th>
                                            <th class="col-md-3">
                                                @Html.Raw("Setor Origem")
                                            </th>
                                            <th class="col-md-3">
                                                @Html.Raw("Setor Destino")
                                            </th>
                                            <th>
                                                @Html.Raw("Usuário")
                                            </th>
                                            <th class="col-md-1 text-center">
                                                @Html.Raw("Status")
                                            </th>
                                        </tr>

                                        @foreach (var historico in Model.HistoricoProtocolo)
                                        {
                                            <tr>
                                                <td class="text-center">
                                                    @Html.DisplayFor(hist => historico.DataMovimento)
                                                </td>
                                                <td>
                                                    @ProtocoloHelper.Truncate(historico.Historico, 19)
                                                </td>
                                                <td class="text-center">
                                                    @Html.DisplayFor(hist => historico.LoteId)
                                                </td>
                                                <td>
                                                    @ProtocoloHelper.Truncate(historico.Setor.Nome, 20)
                                                </td>
                                                <td>
                                                    @ProtocoloHelper.Truncate(historico.SetorDestino == null ? null : historico.SetorDestino.Nome, 20)
                                                </td>
                                                <td>
                                                    @ProtocoloHelper.Truncate(historico.Usuario.Logon, 10)
                                                </td>
                                                <td class="text-center">
                                                    @Html.DisplayFor(hist => historico.DescricaoStatus)
                                                </td>
                                            </tr>
                                        }
                                    </table>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AnexosProtocolo, "Anexos", new { @style = "vertical-align: bottom;" })

                                @if (Model.AnexosProtocolo.Any())
                                {
                                    <table class="table table-striped table-bordered table-hover">
                                        <tr>
                                            <th>
                                                @Html.Raw("Nome do Arquivo")
                                            </th>
                                            <th class="col-md-1"></th>
                                        </tr>
                                        @foreach (var anexo in Model.AnexosProtocolo)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.ActionLink(anexo.NomeArquivo, "DownloadAnexo", new { id = anexo.Id }, new { target = "_blank" })
                                                </td>
                                                <td class="text-center">
                                                    <button type="button" class="btn btn-danger btn-circle excluir-anexo" data-id="@anexo.Id">
                                                        <i class="fa fa-trash"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    </table>
                                }

                                <input type="file" id="Anexo" name="anexo" class="form-control" />
                                @Html.ValidationMessage("Arquivo", string.Empty, new { @class = "text-danger" })
                            </div>

                            <div class="form-group text-center">
                                <input type="submit" value="Salvar Anexo" class="btn btn-outline btn-primary" />

                                @if (User.IsInRole("Administrador"))
                                {
                                    <input type="button" value="Voltar" class="btn btn-outline btn-primary"
                                           onclick="location.href='@Url.Action("Index", "Protocolo")'" />
                                    if (!Model.Status.Equals("CA"))
                                    {
                                        <button id="cancelar" type="button" class="btn btn-outline btn-danger">
                                            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancelar
                                        </button>
                                    }
                                }
                                else
                                {
                                    <input type="button" value="Voltar" class="btn btn-outline btn-primary"
                                           onclick="location.href='@ViewBag.returnUrl'" />
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div id="excluirConfirmationDialog" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true"
         data-backdrop="static" data-keyboard="false" style="z-index: 1051;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Confirmação</h4>
                </div>
                <div class="modal-body">
                    <p class="text-warning"><small>Deseja realmente excluir o anexo?</small></p>
                </div>
                <div class="modal-footer text-center">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" id="confirmExcluir">Confirmar</button>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script type="text/javascript">
            $(document).ready(function () {
                $(document).on('click', '#cancelar', function (e) {
                    e.preventDefault();

                    $.ajax({
                        url: '@Url.Action("OpenCancelView", "Protocolo")',
                        data: [
                            {
                                name: 'receivedList[0].ProtocoloId',
                                value: $('#ProtocoloId').val()
                            },
                            {
                                name: 'receivedList[0].Selecionado',
                                value: 'true'
                            }
                        ],
                        type: 'POST',
                        success: function (data) {
                            $("#modal-content").html(data);
                            $("#modal-container").modal("show");
                        }
                    });
                });

                $(document).on('click', '.excluir-anexo', function (e) {
                    var $id = $(this).data('id');

                    $('#confirmExcluir').data('id', $id);

                    $('#excluirConfirmationDialog').modal('show');
                });

                $(document).on('click', '#confirmExcluir', function () {
                    var $id = $(this).data('id');

                    post('/Protocolo/DeletarAnexo/', { id: $id });
                });

                function post(path, params, method) {
                    method = method || "post"; // Set method to post by default if not specified.

                    // The rest of this code assumes you are not using a library.
                    // It can be made less wordy if you use one.
                    var form = document.createElement("form");
                    form.setAttribute("method", method);
                    form.setAttribute("action", path);

                    for (var key in params) {
                        if (params.hasOwnProperty(key)) {
                            var hiddenField = document.createElement("input");
                            hiddenField.setAttribute("type", "hidden");
                            hiddenField.setAttribute("name", key);
                            hiddenField.setAttribute("value", params[key]);

                            form.appendChild(hiddenField);
                        }
                    }

                    document.body.appendChild(form);
                    form.submit();
                };
            });
        </script>
    }
</div>