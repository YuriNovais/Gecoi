@model List<Protocolo.Models.ReceivedProtocoloModel>

@{
    ViewBag.Title = "Atrasados";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <ol class="breadcrumb" style="margin-left: -30px; margin-right: -15px;">
        <li>
            <a href="@Url.Action("Home", "Protocolo")">
                <i class="fa fa-home fa-fw"></i> Home
            </a>
        </li>
        <li class="active">
            @ViewBag.Title
        </li>
    </ol>
    <div class="panel panel-red">
        <div class="panel-heading">
            <div class="row">
                <div class="col-xs-1">
                    <i class="fa fa-clock-o fa-5x"></i>
                </div>
                <div class="col-xs-9 text-left">
                    <h1>@ViewBag.Title</h1>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">

    @if (Model.Any())
    {
        using (Html.BeginForm(null, null, FormMethod.Post, new { id = "receivedForm" }))
        {
            <div class="panel panel-default">
                @if (User.IsInRole("Administrador") || User.IsInRole("Gestor") || User.IsInRole("Comum"))
                {
                    <div class="panel-heading text-right">
                        <button id="enviar" type="button" class="btn btn-outline btn-primary toggle-enable">
                            <span class="glyphicon glyphicon-send" aria-hidden="true"></span> Enviar
                        </button>
                        <button id="finalizar" type="button" class="btn btn-outline btn-primary toggle-enable">
                            <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Finalizar
                        </button>
                        <button id="cancelar" type="button" class="btn btn-outline btn-danger toggle-enable">
                            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancelar
                        </button>
                        <button id="despachar" type="button" class="btn btn-outline btn-primary toggle-enable">
                            <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span> Observação
                        </button>
                    </div>
                }

                <div class="panel-body">
                    <table class="table table-striped table-bordered table-hover" id="dataTables-received">
                        <thead>
                            <tr>
                                @if (User.IsInRole("Administrador") || User.IsInRole("Gestor") || User.IsInRole("Comum"))
                                {
                                    <th class="text-center">
                                        @Html.CheckBox("SelectAll", new { @class = "selectAll" })
                                    </th>
                                }
                                <th class="text-center">
                                    @Html.DisplayName("Protocolo")
                                </th>
                                <th class="col-md-3">
                                    @Html.DisplayName("Assunto")
                                </th>
                                <th>
                                    @Html.DisplayName("Data de Recebimento")
                                </th>
                                <th>
                                    @Html.DisplayName("Responsável pelo Recebimento")
                                </th>
                                <th class="text-center">
                                    @Html.DisplayName("Prazo")
                                </th>
                                <th class="text-center">
                                    @Html.DisplayName("Dias de Atraso")
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Count; i++)
                            {
                                <tr class="danger")>
                                    @Html.Hidden("receivedList[" + @i + "].ProtocoloId", Model[i].ProtocoloId)

                                    @if (User.IsInRole("Administrador") || User.IsInRole("Gestor") || User.IsInRole("Comum"))
                                    {
                                        <td class="text-center">
                                            @Html.CheckBox("receivedList[" + @i + "].Selecionado", Model[i].Selecionado, new { @class = "checkbox_class" })
                                        </td>
                                    }
                                    <td class="text-center">
                                        @Html.Hidden("receivedList[" + @i + "].Numero", Model[i].Numero)
                                        @Html.Hidden("receivedList[" + @i + "].Ano", Model[i].Ano)
                                        @Html.DisplayFor(modelItem => Model[i].NumeroAno)
                                    </td>
                                    <td>
                                        @Html.Hidden("receivedList[" + @i + "].Assunto", Model[i].Assunto)
                                        @ProtocoloHelper.Truncate(Model[i].Assunto, 25)
                                    </td>
                                    <td>
                                        @Html.Hidden("receivedList[" + @i + "].DataRecebimento", Model[i].DataRecebimento)
                                        @Html.DisplayFor(modelItem => Model[i].DataRecebimento)
                                    </td>
                                    <td>
                                        @Html.Hidden("receivedList[" + @i + "].ResponsavelRecebimento", Model[i].ResponsavelRecebimento)
                                        @Html.DisplayFor(modelItem => Model[i].ResponsavelRecebimento)
                                    </td>
                                    <td class="text-center">
                                        @Html.Hidden("receivedList[" + @i + "].DiasAtraso", Model[i].Prazo)
                                        @Html.Raw(Model[i].Prazo + " dias")
                                    </td>
                                    <td class="text-center">
                                        @Html.Hidden("receivedList[" + @i + "].DiasAtraso", Model[i].DiasAtraso)
                                        @Html.DisplayFor(modelItem => Model[i].DiasAtraso)
                                    </td>
                                    <td class="text-center">
                                        <button type="button" class="btn btn-primary btn-circle" title="Visualizar" aria-label="Visualizar" onclick="location.href = '@Url.Action("Visualizar", "Protocolo", new { id = Model[i].ProtocoloId })'">
                                            <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        @section scripts {
            @Scripts.Render("~/bundles/jqueryval")

            <script type="text/javascript">
                $(document).ready(function () {
                    $('#dataTables-received').dataTable({
                        'language': {
                            'url': '@Url.Content("~/Content/JSON/datatables-portugues.json")'
                        },
                        'sort': false,
                        'paginate': false,
                        'info': false
                    });

                    $('#enviar').on('click', function (e) {
                        e.preventDefault();

                        executeAjax('@Url.Action("OpenSendView", "Protocolo")', $(this).closest('form').serializeArray());
                    });

                    $('#finalizar').on('click', function (e) {
                        e.preventDefault();

                        executeAjax('@Url.Action("OpenFinishView", "Protocolo")', $(this).closest('form').serializeArray());
                    });

                    $('#cancelar').on('click', function (e) {
                        e.preventDefault();

                        executeAjax('@Url.Action("OpenCancelView", "Protocolo")', $(this).closest('form').serializeArray());
                    });

                    $('#despachar').on('click', function (e) {
                        e.preventDefault();

                        executeAjax('@Url.Action("OpenDispatchView", "Protocolo")', $(this).closest('form').serializeArray());
                    });

                    function executeAjax(url, data) {
                        $.ajax({
                            url: url,
                            data: data,
                            type: 'POST',
                            success: function (data) {
                                $("#modal-content").html(data);
                                $("#modal-container").modal("show");
                            }
                        });
                    }
                });
            </script>
        }
    }
    else
    {
        <div class="alert alert-info" role="alert">
            <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
            Sua caixa de protocolos Atrasados está vazia.
        </div>
    }
</div>