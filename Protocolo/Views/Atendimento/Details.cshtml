@model Protocolo.Models.Atendimento

@{
    ViewBag.Title = "";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <ol class="breadcrumb" style="margin-left: -30px; margin-right: -30px;">
            <li>
                <a href="@Url.Action("Home", "Protocolo")">
                    <i class="fa fa-home fa-fw"></i> Dashboard
                </a>
            </li>
            <li>
                <a href="@Url.Action("Index", "Atendimento")">
                    
                </a>
            </li>
            <li class="active">
                @ViewBag.Title
            </li>
        </ol>
        <h1 class="page-header">@ViewBag.Title</h1>
    </div>
</div>

<div class="row">
    <div class="row">
        @using (Html.BeginForm("AdicionarAnexo", "Atendiemnto", new { returnUrl = ViewBag.returnUrl }, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()


        <div class="col-lg-12">
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Id)
                            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            @Html.LabelFor(model => model.data_abertura)
                            @Html.EditorFor(model => model.data_abertura, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.Label("Cliente")
                            @Html.EditorFor(model => model.FuncionarioCliente.Cliente.RazaoSocial, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            @Html.Label("Solicitante")
                            @Html.EditorFor(model => model.FuncionarioCliente.Nome, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            @Html.Label("Tela")
                            @Html.EditorFor(model => model.Tela.Descricao, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            @Html.Label("Sistema")
                            @Html.EditorFor(model => model.Tela.Sistema.Nome, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">
                            @Html.Label("Motivo")
                            @Html.EditorFor(model => model.Motivo.descricao, new { htmlAttributes = new { rows = "3", cols = "40", @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>

                    <div class="col-lg-12">
                        <div class="form-group">
                            @Html.Label("Descrição", new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Problema, new { rows = "2", cols = "40", @class = "form-control", @maxlength = "100", @style = "resize: none;", @disabled = "disabled" })
                        </div>
                    </div>

                </div>


                <div class="card-header bg-dark">
                    @Html.Label(" ", new { @class = "control-label" })
                    <br />
                </div>


                <div class="form-group">

                    @Html.LabelFor(model => model.AtendimentoAnexo, "Anexos :", new { @style = "vertical-align: bottom;" })

                    @if (Model.AtendimentoAnexo.Any())
                    {
                        <table class="table table-striped table-bordered table-hover">
                            <tr>
                                <th>
                                    @Html.Raw("Nome do Arquivo")
                                </th>
                            </tr>
                            @foreach (var anexo in Model.AtendimentoAnexo)
                            {
                                <tr>
                                    <td>
                                        @Html.ActionLink(anexo.NomeArquivo, "DownloadAnexo", new { id = anexo.Id }, new { target = "_blank" })
                                    </td>

                                </tr>
                            }
                        </table>
                    }

                </div>


                <div class="form-group">
                    @Html.Label("Histórico: ", new { @style = "vertical-align: bottom;" })

                    <a class="collapsable" data-toggle="collapse" href="#collapseHistorico">
                        <i class="fa fa-plus-circle fa-2x"></i>
                    </a>


                    <div id="collapseHistorico" class="panel-collapse collapse">
                        <table class="table table-striped table-bordered table-hover" style="width: auto !important">
                            <tr>
                                <th class="col-md-1 text-center">
                                    @Html.Raw("Usuário")
                                </th>
                                <th class="col-md-8">
                                    @Html.Raw("Descrição")
                                </th>
                                <th class="col-md-2 text-center">
                                    @Html.Raw("Data")
                                </th>
                                <th class="col-md-2 text-center">
                                    @Html.Raw("Status")
                                </th>


                            </tr>
                            @foreach (var Historico in Model.AtendimentosHistorico)
                            {
                                <tr>
                                    <td>
                                        @ProtocoloHelper.Truncate(Historico.Usuario.Logon, 15)
                                    </td>
                                    <td>
                                        @ProtocoloHelper.Truncate(Historico.Solucao, 200)
                                    </td>
                                    <td>
                                        @(Historico.Datahistorico)
                                    </td>
                                    <td>
                                        @(Historico.StatusAtendimento.descricao)
                                    </td>
                                </tr>
                            }

                        </table>
                    </div>
                </div>

            </div>

            <div class="col-lg-12">
                <div class="form-group text-center">
                   
                    <input type="button" value="Voltar" class="btn btn-outline btn-primary" onclick="location.href='@Url.Action("Index", "Atendimento")'" />


                </div>
            </div>

        </div>

           








        }
    </div>

    <div id="excluirConfirmationDialog" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true"
         data-backdrop="static" data-keyboard="false" style="z-index: 1051;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Confirmação</h4>
                </div>
                <div class="modal-body">
                    <p class="text-warning"><small>Deseja realmente excluir o anexo?</small></p>
                </div>
                <div class="modal-footer text-center">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" id="confirmExcluir">Confirmar</button>
                </div>
            </div>
        </div>
    </div>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
            $(document).ready(function () {
                $(document).on('click', '#cancelar', function (e) {
                    e.preventDefault();

                    $.ajax({
                        url: '@Url.Action("OpenCancelView", "Protocolo")',
                        data: [
                            {
                                name: 'receivedList[0].ProtocoloId',
                                value: $('#ProtocoloId').val()
                            },
                            {
                                name: 'receivedList[0].Selecionado',
                                value: 'true'
                            }
                        ],
                        type: 'POST',
                        success: function (data) {
                            $("#modal-content").html(data);
                            $("#modal-container").modal("show");
                        }
                    });
                });

                $(document).on('click', '.excluir-anexo', function (e) {
                    var $id = $(this).data('id');

                    $('#confirmExcluir').data('id', $id);

                    $('#excluirConfirmationDialog').modal('show');
                });

                $(document).on('click', '#confirmExcluir', function () {
                    var $id = $(this).data('id');

                    post('/Atendimento/DeletarAnexo/', { id: $id });
                });

                function post(path, params, method) {
                    method = method || "post"; // Set method to post by default if not specified.

                    // The rest of this code assumes you are not using a library.
                    // It can be made less wordy if you use one.
                    var form = document.createElement("form");
                    form.setAttribute("method", method);
                    form.setAttribute("action", path);

                    for (var key in params) {
                        if (params.hasOwnProperty(key)) {
                            var hiddenField = document.createElement("input");
                            hiddenField.setAttribute("type", "hidden");
                            hiddenField.setAttribute("name", key);
                            hiddenField.setAttribute("value", params[key]);

                            form.appendChild(hiddenField);
                        }
                    }

                    document.body.appendChild(form);
                    form.submit();
                };
            });
        </script>
    }

</div>