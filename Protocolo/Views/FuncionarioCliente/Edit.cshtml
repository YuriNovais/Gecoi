@model Protocolo.Models.FuncionarioCliente

@{
    ViewBag.Title = "Editar Funcionário";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <ol class="breadcrumb" style="margin-left: -30px; margin-right: -30px;">
            <li>
                <a href="@Url.Action("Home", "Protocolo")">
                    <i class="fa fa-home fa-fw"></i>
                </a>
            </li>
            <li>
                <a href="@Url.Action("Index", "FuncionarioCliente")">
                    Funcionários
                </a>
            </li>
        </ol>
        @{ Html.RenderPartial("_Alerts"); }
    </div>
</div>


<div class="card card-primary">
    <div class="card-header">
        <h4 class="page-header">@ViewBag.Title</h4>
    </div>

    @using (Html.BeginForm("Edit", "FuncionarioCliente", FormMethod.Post, new { id = "FuncionarioClienteForm" }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.Id)

        <div class="col-lg-12">
            <div class="panel-body">
                <div class="row">

                    <div class="col-lg-1">
                        <div class="row">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Id)
                                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            </div>
                        </div>
                      </div>

                        <div class="col-lg-8">
                            <div class="form-group required">

                                @Html.LabelFor(model => model.Nome, new { @class = "control-label" })
                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nome, string.Empty, new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="col-lg-4">
                            <div class="form-group required">
                                @Html.LabelFor(model => model.Email, new { @class = "control-label" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, string.Empty, new { @class = "text-danger" })


                            </div>
                        </div>

                        <div class="col-lg-4">
                            <div class="form-group required">
                                @Html.LabelFor(model => model.ClienteId, "Cliente", new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.ClienteId, null, " ", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClienteId, string.Empty, new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div>
                                @Html.LabelFor(model => model.Ativo)
                            </div>
                            <div class="radio-inline">
                                <label style="font-weight: normal;">
                                    @Html.RadioButtonFor(model => model.Ativo, true, new { @tabindex = 6 }) Sim
                                </label>
                            </div>
                            <div class="radio-inline">
                                <label style="font-weight: normal;">
                                    @Html.RadioButtonFor(model => model.Ativo, false, new { @tabindex = 6 }) Não
                                </label>
                            </div>
                            @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-lg-12">
                            <div class="form-group text-center">

                                <input type="submit" value="Salvar" class="btn btn-outline btn-primary confirmation-action" />
                                <input type="button" value="Cancelar" class="btn btn-outline btn-primary" onclick="location.href='@Url.Action("Index", "FuncionarioCliente")'" />
                            </div>
                        </div>
                    </div>
            </div>
        </div>

    }

</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
